language: c
sudo: false

matrix:
  include:
    - env: TASK="osx"
      os: osx
      compiler: clang
      before_install: rvm get stable
      install:
        - brew update
        - brew install python3 ninja pkg-config pcre2 portaudio; echo "done"
        - pip3 install meson
    - env: TASK="linux"
      os: linux
      dist: "trusty"
      install:
        - export PATH="`pwd`/build:${PATH}"
        - wget https://github.com/ninja-build/ninja/releases/download/v1.7.2/ninja-linux.zip && unzip -q ninja-linux.zip -d build
        - pip3 install meson
      addons: {apt: {packages: [libasound2-dev, python3-pip, pkg-config]}}
    - env: TASK="coverage"
      os: linux
      dist: "trusty"
      install:
        - export PATH="`pwd`/build:${PATH}"
        - wget https://github.com/ninja-build/ninja/releases/download/v1.7.2/ninja-linux.zip && unzip -q ninja-linux.zip -d build
        - pip3 install meson
      script:
        - meson build --prefix="$PWD/install" -D b_coverage=true
        - ninja -C build test
      after_success:
        - bash <(curl -s https://codecov.io/bash)
      addons: {apt: {packages: [libasound2-dev, python3-pip, pkg-config]}}
    - env: TASK="windows"
      os: linux
      dist: "trusty"
      install:
        - export PATH="`pwd`/build:${PATH}"
        - wget https://github.com/ninja-build/ninja/releases/download/v1.7.2/ninja-linux.zip && unzip -q ninja-linux.zip -d build
        - pip3 install meson
      script:
        - meson build --prefix="$PWD/install" --cross-file="cross/ubuntu-mingw64.txt"
        - ninja -C build install
      addons: {apt: {packages: [python3-pip, pkg-config, wine, binutils-mingw-w64-x86-64, mingw-w64-x86-64-dev, gcc-mingw-w64-x86-64]}}
    - env: TASK="armhf"
      os: linux
      dist: "trusty"
      install:
        - export PATH="`pwd`/build:${PATH}"
        - wget https://github.com/ninja-build/ninja/releases/download/v1.7.2/ninja-linux.zip && unzip -q ninja-linux.zip -d build
        - pip3 install meson
      script:
        - meson build --prefix="$PWD/install" --cross-file="cross/ubuntu-armhf.txt"
        - ninja -C build install
      addons: {apt: {packages: [python3-pip, pkg-config-arm-linux-gnueabihf, libc6-dev-armhf-cross, gcc-arm-linux-gnueabihf, binutils-arm-linux-gnueabihf]}}

# We don't want to pull submodules recursively
git:
  submodules: false

before_install:
  - git submodule update --init

script:
  - meson build --prefix="$PWD/install"
  - ninja -C build test install



env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "RhaRC6Zqf+OTAKK/b3fYOb02z2tIMc7SmpAZfLy2hK0rtx8DRG9noHXuzPn6DaZvGqmVhvmtW6q7EYDrXBqvTIjalq+D94ROA5HDRIk/GH0HzIDuSieYVda8bTE9nBHm1wMBX/hjoDVLAauVnNo1r7YHBax1ODz8BUmEoOtjveZni/Is5MlALxJaXBTn/mVvaBUS+v16JvGGwViNnJ7Jq33a0ixOU7LNawGFwlUgEWVquzWOJEH+Ms5qSjgs6JswHfxNhpF0Pw1SUtmBu3KcNa6sAeHhtvpqwiqdM4FCXwkKSqqE97zCurvFeLfbIFt9G+FRzJbyg38hzNU6c8gMHvJ4/QTWNrBpuQ96tv/fXIyjomorC5uLe6qICivWiImMBTbmu6dgSs3JrPGfZcI4hSgdCAIXjIt/zloDL3UGo4yyr+7kjROVxIeQleLTTwnsJw2702sdaL++Eq2++vy69ydkb61TE2RsdxDcFxm/oi0+cBGb43+La40ZUx09Sy9Er/vEDZua+nJLqbMQhfzvcvJBsyZozaHNIheO7B+BHKWERgumEC3Q6iox+p/ummZSwZ98EGC/F1YfCnUbkK+/38i48FAMF/E5lycVOg8prKK3IdhtCUg9QPdlw2e5OeS2L2Uee4Aez66KbCAeYXCI+2p7N8EahZPyJQ41s1DHDe4="



addons:
  coverity_scan:
    project:
      name: "zeehio/mimic-core"
      description: "Core text to speech for mycroft"
    notification_email: sergioller@gmail.com
    build_command_prepend: meson build --prefix="$PWD/install"
    build_command: ninja -C build test install
    branch_pattern: coverity_scan

